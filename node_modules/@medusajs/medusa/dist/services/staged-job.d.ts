import { EntityManager } from "typeorm";
import { TransactionBaseService } from "../interfaces";
import { StagedJob } from "../models";
import { StagedJobRepository } from "../repositories/staged-job";
import { FindConfig } from "../types/common";
declare type StagedJobServiceProps = {
    manager: EntityManager;
    stagedJobRepository: typeof StagedJobRepository;
};
/**
 * Provides layer to manipulate users.
 */
declare class StagedJobService extends TransactionBaseService {
    protected stagedJobRepository_: typeof StagedJobRepository;
    constructor({ stagedJobRepository }: StagedJobServiceProps);
    create(data: Partial<StagedJob>): Promise<StagedJob>;
    list(config: FindConfig<StagedJob>): Promise<StagedJob[]>;
    remove(stagedJob: StagedJob): Promise<StagedJob | undefined>;
}
export default StagedJobService;
